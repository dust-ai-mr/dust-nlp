/*
 * Copyright 2024 Alan Littleford
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

plugins {
    id 'groovy'
    id 'java-library'
    id 'maven-publish'
}

group 'com.mentalresonance'
version '1.2.0'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    compileOnly 'org.slf4j:slf4j-simple:2.0.7'
    compileOnly 'org.apache.groovy:groovy-all:4.0.12'

    testImplementation platform("org.spockframework:spock-bom:2.4-M1-groovy-4.0")
    testImplementation 'org.spockframework:spock-core'
    testImplementation 'org.projectlombok:lombok:1.18.30'
    testImplementation 'org.slf4j:slf4j-simple:2.0.7'
    testImplementation 'org.apache.groovy:groovy-all:4.0.12'

    implementation 'com.google.code.gson:gson:2.10.1'

    implementation 'com.hexadevlabs:gpt4all-java-binding:1.1.5'

    api('com.mentalresonance:dust-core:1.1.2')
    api('com.mentalresonance:dust-http:1.0.4')
    api('com.mentalresonance:dust-html:1.0.4')
    api('com.ibm.icu:icu4j:69.1')
    api('com.ibm.icu:icu4j-charset:69.1')
    api('com.ibm.icu:icu4j-localespi:69.1')
}

test {
    useJUnitPlatform()
    jvmArgs([
        '-Xmx8g',
        '--add-opens=java.base/java.lang=ALL-UNNAMED',
        '--add-opens=java.base/java.math=ALL-UNNAMED',
        '--add-opens=java.base/java.util=ALL-UNNAMED',
        '--add-opens=java.base/java.util.concurrent=ALL-UNNAMED',
        '--add-opens=java.base/java.net=ALL-UNNAMED',
        '--add-opens=java.base/java.text=ALL-UNNAMED',
        '--add-opens=java.sql/java.sql=ALL-UNNAMED'
    ])

}

javadoc.options {
    addStringOption('-release', '21')
}


tasks.withType(JavaCompile).each {
    // it.options.compilerArgs.add('-Xlint:preview')
}



java {
    withSourcesJar()
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

compileGroovy {

}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}